/*P8.1 Program to input values into an array and display them*/
#include<stdio.h>
int main(void)
{
	int arr[5],i;
	for(i=0; i<5; i++)
	{
		printf("Enter a value for arr[%d] : ",i);
		scanf("%d",&arr[i]);
	}
	printf("The array elements are : \n");
	for(i=0; i<5; i++)
		printf("%d\t",arr[i]);
	printf("\n");
	return 0;
}



/*P8.2 Program to add elements of an array*/
#include<stdio.h>
int main(void)
{
	int arr[10],i,sum=0;
	for(i=0; i<10; i++)
	{
		printf("Enter a value for arr[%d] : ",i);
		scanf("%d",&arr[i]);
		sum+=arr[i];
	}
	printf("Sum=%d\n",sum);
	return 0;
}





/*P8.3 Program to count even and odd numbers in an array*/
#include<stdio.h>
#define SIZE 10
int main(void)
{
	int arr[SIZE],i,even=0,odd=0;
	for(i=0; i<SIZE; i++)
	{
		printf("Enter a value for arr[%d] : ",i);
		scanf("%d",&arr[i]);
		if(arr[i]%2 == 0)
			even++;
		else
			odd++;
	}
	printf("Even numbers=%d, Odd numbers=%d\n",even,odd);
	return 0;
}





/*P8.4 Program to find the largest and smallest number in an array*/
#include<stdio.h>
int main(void)
{
	int i,arr[10]={2,5,4,1,8,9,11,6,3,7};
	int small,large;
	small=large=arr[0];
	for(i=1; i<10; i++)
	{
		if(arr[i] < small)
			small=arr[i];
		if(arr[i] > large)
			large=arr[i];
	}
	printf("Smallest=%d,Largest=%d\n",small,large);
	return 0;
}





/*P8.5 Program to reverse the elements of an array*/
#include<stdio.h>
int main(void)
{
	int i,j,temp,arr[10] = {1,2,3,4,5,6,7,8,9,10};
	for(i=0,j=9; i<j; i++,j--)
	{
		temp=arr[i];
		arr[i]=arr[j];
		arr[j]=temp;
	}
	printf("After reversing, the array is : ");
	for(i=0; i<10; i++)
		printf("%d  ",arr[i]);
	printf("\n");
	return 0;
}






/*P8.6 Program to insert an item in an array at a specified index by moving other elements to the right*/
#include<stdio.h>
#define SIZE 10
int main(void)
{
	int arr[SIZE];
	int i,item,index;
	printf("Enter elements of the array : \n");
	for(i=0; i<SIZE-1; i++) /*rightmost space in the array should be empty*/
			scanf("%d",&arr[i]);
	printf("Enter the item to be inserted : ");
	scanf("%d",&item);
	printf("Enter the index where item is to be inserted : ");
	scanf("%d",&index);

	for(i=SIZE-2; i>=index; i--)
		arr[i+1]=arr[i];    /*Shift elements to the right*/
	arr[i+1]=item;	    /*Insert item at the proper place*/

	for(i=0; i<SIZE; i++)
		printf("%d  ",arr[i]);
	printf("\n");
	return 0;
}






/*P8.7 Program to insert an item in a sorted array at the proper place by shifting other elements to the right */
#include<stdio.h>
#define SIZE 10
int main(void)
{
	int arr[SIZE];
	int i,item;
	printf("Enter elements of the array(in sorted order) : \n");
	for(i=0; i<SIZE-1; i++) /*rightmost space in the array should be empty*/
			scanf("%d",&arr[i] );
	printf("Enter the item to be inserted : ");
	scanf("%d",&item);
	for(i=SIZE-2; item<arr[i] && i>=0; i--)
		arr[i+1]=arr[i];    /*Shift elements to the right*/
	arr[i+1]=item;	    /*Insert item at the proper place*/

	for(i=0; i<SIZE; i++)
		printf("%d  ",arr[i]);
	printf("\n");
	return 0;
}




/*P8.8 Program of sorting using insertion sort*/
#include<stdio.h>
#define MAX 100
int main(void)
{
	int arr[MAX],i,j,k,n;
	printf("Enter the number of elements : ");
	scanf("%d",&n);
	for(i=0; i<n; i++)
	{
		printf("Enter element %d : ",i+1);
		scanf("%d", &arr[i]);
	}
	/*Insertion sort*/
	for(i=1; i<n; i++)
	{
		k=arr[i]; /*k is to be inserted at proper place*/
		for(j=i-1; j>=0 && k<arr[j]; j--)
			arr[j+1]=arr[j];
		arr[j+1]=k;
	}
	printf("Sorted list is :\n");
	for(i=0; i<n; i++)
		printf("%d ",arr[i]);
	printf("\n");
	return 0;
}/*End of main()*/








/*P8.9 Program to convert a decimal number to binary number*/
#include<stdio.h>
int main(void)
{
	int num,arr[15],i,j;
	printf("Enter a decimal number : ");
	scanf("%d",&num);
	i=0;
	while(num>0)
	{
		arr[i] = num%2;	/*store the remainder in array*/
		num/=2;
		i++;
	}
	printf("Binary number is : ");
	for(j=i-1; j>=0; j--)     /*print the array backwards*/
		printf("%d",arr[j]);
	printf("\n");
	return 0;
}





/*P8.10 Program to pass array elements to a function*/
#include<stdio.h>
void check(int num);
int main(void)
{
	int arr[10],i;
	printf("Enter the array elements : ");
	for(i=0; i<10; i++)
	{
		scanf("%d",&arr[i]);
		check(arr[i]);
	}
	return 0;
}
void check(int num)
{
	if(num%2==0)
		printf("%d is even\n",num);
	else
      	printf("%d is odd\n",num);
}





/*P8.11 Program to input and display a matrix*/
#define ROW 3
#define COL 4
#include<stdio.h>
int main(void)
{
	int mat[ROW][COL],i,j;
	printf("Enter the elements of the matrix(%dx%d) row-wise :\n",ROW,COL);
	for(i=0; i<ROW; i++)
		for(j=0; j<COL; j++)
			scanf("%d",&mat[i][j]);

	printf("The matrix that you have entered is :\n");
	for(i=0; i<ROW; i++)
	{
		for(j=0; j<COL; j++)
			printf("%5d",mat[i][j]);
		printf("\n");
	}
	printf("\n");
	return 0;
}






/*P8.12 Addition of two matrices*/
#define ROW 3
#define COL 4
#include<stdio.h>
int main(void)
{
	int i,j,mat1[ROW][COL],mat2[ROW][COL],mat3[ROW][COL];
	printf("Enter matrix mat1(%dx%d)row-wise :\n",ROW,COL);
	for(i=0; i<ROW; i++)
		for(j=0; j<COL; j++)
			scanf("%d",&mat1[i][j]);
	printf("Enter matrix mat2(%dx%d)row-wise :\n",ROW,COL);
	for(i=0; i<ROW; i++)
		for(j=0; j<COL; j++)
			scanf("%d",&mat2[i][j] );
	/*Addition*/
	for(i=0; i<ROW; i++)
		for(j=0; j<COL; j++)
			mat3[i][j] = mat1[i][j] + mat2[i][j];
	printf("The resultant matrix mat3 is :\n");
	for(i=0; i<ROW; i++)
	{
		for(j=0; j<COL; j++)
			printf("%5d",mat3[i][j]);
		printf("\n");
	}
	return 0;
}






/*P8.13 Multiplication of two matrices*/
#include<stdio.h>
#define ROW1 3
#define COL1 4
#define ROW2 COL1
#define COL2 2
int main(void)
{
	int mat1[ROW1][COL1],mat2[ROW2][COL2],mat3[ROW1][COL2];
	int i,j,k;
	printf("Enter matrix mat1(%dx%d)row-wise :\n",ROW1,COL1);
	for(i=0; i<ROW1; i++)
		for(j=0; j<COL1; j++)
			scanf("%d",&mat1[i][j]);
	printf("Enter matrix mat2(%dx%d)row-wise :\n",ROW2,COL2);
	for(i=0; i<ROW2; i++)
		for(j=0; j<COL2; j++)
			scanf("%d",&mat2[i][j] );
	/*Multiplication*/
	for(i=0; i<ROW1; i++)
		for(j=0; j<COL2; j++)
		{
			mat3[i][j] = 0;
			for(k=0; k<COL1; k++)
				mat3[i][j] += mat1[i][k] * mat2[k][j];
		}
	printf("The Resultant matrix mat3 is :\n");
	for(i=0; i<ROW1; i++)
	{
		for(j=0; j<COL2; j++)
			printf("%5d",mat3[i][j]);
		printf("\n");
	}
	return 0;
}






/*P8.14 Tranpose of matrix. */
#include<stdio.h>
#define ROW 3
#define COL 4
int main(void)
{
	int mat1[ROW][COL], mat2[COL][ROW],i,j;
	printf("Enter matrix mat1(%dx%d) row-wise : \n",ROW,COL);
	for(i=0; i<ROW; i++)
		for(j=0; j<COL; j++)
			scanf("%d",&mat1[i][j]);
	
	for(i=0; i<COL; i++)
		for(j=0; j<ROW; j++)
			mat2[i][j]=mat1[j][i];

	printf("Transpose of matrix is:\n");
	for(i=0; i<COL; i++)
	{
		for(j=0; j<ROW; j++)
			printf("%5d",mat2[i][j]);
		printf("\n");
	}
	return 0;
}






/*P8.15 Program to convert a decimal number to Binary, octal or hexadecimal*/
#include<stdio.h>
void func(int num,int b);
int main(void)
{
	int num,ch;
	printf("Enter a decimal number : ");
	scanf("%d",&num);
	printf("1.Binary\n2.Octal\n3.Hexadecimal\n");
	printf("Enter your choice : ");
	scanf("%d",&ch);
	switch(ch)
	{
		case 1:
			printf("Binary equivalent is : ");
			func(num,2);
			break;
		case 2:
			printf("Octal equivalent is : ");
			func(num,8);
			break;
		case 3:
			printf("Hexadecimal equivalent is : ");
			func(num,16);
			break;
	}
	printf("\n");
	return 0;
}
void func(int num,int b)
{
	int i=0,j,rem;
	char arr[20];
	while(num>0)
	{
		rem=num%b;
		num/=b;
		if(rem>9 && rem<16)
			arr[i++]=rem-10+'A';
		else
			arr[i++]=rem+'0';
	}
	for(j=i-1; j>=0; j--)
		printf("%c",arr[j]);
}






/*P8.16 Linear search in an array*/
#include <stdio.h>
#define MAX 50
int LinearSearch(int arr[],int n,int item);
int main(void)
{
	int i,n,item,arr[MAX],index;
	printf("Enter the number of elements : ");
	scanf("%d",&n);
	printf("Enter the elements : \n");
	for(i=0; i<n; i++)
		scanf("%d", &arr[i]);
	printf("Enter the item to be searched : ");
	scanf("%d", &item);
	index=LinearSearch(arr,n,item);
	if(index==-1)
		printf("%d not found in array\n",item);
	else
		printf("%d found at position %d\n",item,index);
	return 0;
}

int LinearSearch(int arr[],int n,int item)
{
	int i=0;
	while(i<n && item!=arr[i])
		i++;
	if(i<n) 
		return i;
	else
		return -1;
}







/*P8.17 Binary search in an array*/
#include <stdio.h>
#define MAX 50
int BinarySearch(int arr[],int size,int item);
int main(void)
{
	int i,size,item,arr[MAX],index;
	printf("Enter the number of elements : ");
	scanf("%d",&size);
	
	printf("Enter the elements(in sorted order) : \n");
	for(i=0; i<size; i++)
		scanf("%d",&arr[i]);

	printf("Enter the item to be searched : ");
	scanf("%d",&item);
	index=BinarySearch(arr,size,item);

	if(index==-1)
		printf("%d not found in array\n",item);
	else
		printf("%d found at position %d\n",item,index);
	return 0;
}
int BinarySearch(int arr[],int size,int item)
{
	int low=0,up=size-1,mid;
	while(low<=up)
	{
		mid=(low+up)/2;
		if(item > arr[mid])
			low=mid+1;	/*Search in right half*/
		else if(item < arr[mid])
			up=mid-1;	/*Search in left half*/
		else
			return mid;
	}
	return -1;
}






/*P8.18 Bubble sort*/
#include<stdio.h>
#define MAX 100
int main(void)
{
	int arr[MAX],i,j,temp,n,xchanges;
	printf("Enter the number of elements : ");
	scanf("%d",&n);
	for(i=0; i<n; i++)
	{
		printf("Enter element %d : ",i+1);
		scanf("%d",&arr[i]);
	}
	/*Bubble sort*/
	for(i=0; i<n-1 ;i++)
	{
		xchanges = 0;
		for(j=0; j<n-1-i; j++)
		{
			if(arr[j] > arr[j+1])
			{
				temp = arr[j];
				arr[j] = arr[j+1];
				arr[j+1] = temp;
				xchanges++;
			}
		}
		if(xchanges==0) /*If list is sorted*/
			break;
	}
	printf("Sorted list is :\n");
	for(i=0; i<n; i++)
		printf("%d ",arr[i]);
	printf("\n");
	return 0;
}







/*P8.19 Selection sort*/
#include<stdio.h>
#define MAX 100
int main(void)
{
	int arr[MAX],i,j,n,temp,min;
	printf("Enter the number of elements : ");
	scanf("%d",&n);
	for(i=0; i<n; i++)
	{
		printf("Enter element %d : ",i+1);
		scanf("%d",&arr[i]);
	}
	/*Selection sort*/
	for(i=0; i<n-1; i++)
	{
		/*Find the index of smallest element*/
		min=i;
		for(j=i+1; j<n; j++)
		{
			if(arr[min]>arr[j])
				min=j ;
		}
		if(i!=min)
		{
			temp=arr[i];
			arr[i]=arr[min];
			arr[min]=temp ;
		}
	}
	printf("Sorted list is : \n");
	for(i=0; i<n; i++)
		printf("%d ",arr[i]);
	printf("\n");
	return 0;
}






/*P8.20*/
#include <stdio.h>
#define MAX 100
int main(void)
{
	int arr[MAX],i,j,temp,n,xchanges;
	printf("Enter the number of elements : ");
	scanf("%d",&n);
	for(i=0; i<n; i++)
	{
		printf("Enter element %d : ",i+1);
		scanf("%d",&arr[i]);
	}
	
	xchanges=0;
	for(j=0; j<n-1; j++)
	{
		if(arr[j] > arr[j+1])
		{
			temp = arr[j];
			arr[j] = arr[j+1];
			arr[j+1] = temp;
			xchanges++;
		}
	}
	
	for(i=0; i<n; i++)
		printf("%d ",arr[i]);
	printf("\nTotal exchanges = %d ",xchanges);
	return 0;
}





/*P8.21 Program of merging two sorted arrays into a third sorted array*/
#include<stdio.h>
#define MAX 100
void merge(int arr1[],int arr2[],int arr3[],int n1,int n2);
int main(void)
{
	int arr1[MAX],arr2[MAX],arr3[2*MAX],n1,n2,i;
	printf("Enter the number of elements in array 1 : ");
	scanf("%d",&n1);
	printf("Enter all the elements in sorted order :\n");
	for(i=0; i<n1; i++)
	{
		printf("Enter element %d : ",i+1);
		scanf("%d",&arr1[i]);
	}
	printf("Enter the number of elements in array 2 : ");
	scanf("%d",&n2);
	printf("Enter all the elements in sorted order :\n");
	for(i=0; i<n2; i++)
	{
		printf("Enter element %d : ",i+1);
		scanf("%d",&arr2[i]);
	}
	merge(arr1,arr2,arr3,n1,n2);
	printf("\nMerged list : ");
	for(i=0; i<n1+n2; i++)
		printf("%d ",arr3[i]);
	printf("\n");
	return 0;
}
void merge(int arr1[],int arr2[],int arr3[],int n1,int n2)
{
	int i,j,k;
	i=0;  /*Index for first array*/
	j=0;  /*Index for second array*/
	k=0;  /*Index for merged array*/
	while((i<=n1-1)&&(j<=n2-1))
	{
		if(arr1[i]<arr2[j])
			arr3[k++]=arr1[i++];
		else
			arr3[k++]=arr2[j++];
	}
	while(i<=n1-1) /*Put remaining elements of arr1 into arr3*/
		arr3[k++]=arr1[i++];
	while(j<=n2-1) 	/*Put remaining elements of arr2 into arr3*/
		arr3[k++]=arr2[j++];
}/*End of merge()*/






/*P8.22 Pascal's triangle*/
#include<stdio.h>
#define MAX 15
int main(void)
{
	int a[MAX][MAX];
	int i,j,n;
	printf("Enter n : ");
	scanf("%d",&n);
	for(i=0; i<=n; i++)
	{
		for(j=0; j<=i; j++)
			if(j==0 || i==j)
				a[i][j]=1;
			else 
				a[i][j]=a[i-1][j-1]+a[i-1][j];
	}
	for(i=0; i<n; i++)
	{
		for(j=0; j<=i; j++)
			printf("%5d",a[i][j]);
		printf("\n");
	}
	return 0;
}







/*P8.23 Magic matrix*/
#include<stdio.h>
#define MAX 20
int main(void)
{
	int a[MAX][MAX],i,j,n,num;
	printf("Enter value of n(odd value) : ");
	scanf("%d",&n);
	i=n-1;		/*Bottom row*/
	j=(n-1)/2;  /*Centre column*/

	for(num=1; num<=n*n; num++)
	{
			a[i][j]=num;
			i++;   /*move down*/
			j--;   /*move left*/
			if(num%n==0)
			{
				i-=2;	/*one above the previous row*/
				j++;	/*back to the previous column*/
			}
			else if(i==n)
				i=0;   /*go to topmost row*/
			else if(j==-1)
				j=n-1; /*go to rightmost column*/
	}
	for(i=0; i<n; i++)
	{
		for(j=0; j<n; j++)
			printf("%4d",a[i][j]);
		printf("\n");
	}
	return 0;
}








